package main

import (
	"log"
	"math/rand"
	"time"
)

type DatabaseMock struct{}
type Nodelist []string

func (d *DatabaseMock) GetNodeAddrs(coin string) (*Nodelist, error) {
	nodelist := &Nodelist{
		"66.85.74.134:18080",

		"176.97.119.152:18080",
		"142.93.79.125:18080",
		"47.33.169.200:18080",
		"185.237.100.32:18080",
		"43.245.198.229:18080",
		"121.99.78.145:18080",
		"5.29.243.194:18080",
		"46.21.15.168:18080",
		"49.13.48.122:18080",
		"49.13.72.35:18080",
		"118.82.216.114:18080",
		"178.156.169.60:18080",
		"34.38.63.61:18080",
		"135.181.139.27:18080",
		"188.62.188.121:18080",
		"100.14.80.141:18080",
		"176.123.6.197:18080",
		"68.148.102.3:18080",
		"165.23.54.224:18080",
		"73.153.123.12:18080",
		"193.149.187.119:18080",
		"77.23.200.101:18080",
		"67.175.251.22:18080",
		"91.152.120.178:18080",
		"170.64.89.198:18080",
		"92.116.74.145:18080",
		"92.116.60.133:18080",
		"108.221.28.101:18080",
		"49.13.211.230:18080",
		"198.167.215.94:18080",
		"5.199.163.11:18080",
		"188.245.192.31:18080",
		"91.4.230.222:18080",
		"103.122.164.46:18088",
		"50.72.61.175:18080",
		"70.53.13.198:21212",
		"97.116.21.13:18080",
		"37.27.219.15:18080",
		"152.42.155.118:18080",
		"79.186.105.172:18080",
		"5.78.106.143:18080",
		"217.67.133.54:18080",
		"83.29.164.161:18080",
		"46.235.120.222:18080",
		"184.167.149.102:18080",
		"135.125.206.110:18080",
		"104.178.101.201:18080",
		"99.26.189.25:18080",
		"77.183.59.135:18080",
		"91.99.111.104:18080",
		"188.250.27.64:18080",
		"170.64.255.11:18080",
		"91.231.182.203:18080",
		"93.123.109.172:18080",
		"134.19.179.203:40425",
		"103.179.44.114:18080",
		"46.142.143.50:18080",
		"104.153.209.162:18080",
		"181.114.40.206:18080",
		"146.0.73.228:18080",
		"47.150.120.178:18080",
		"2.44.110.144:18080",
		"73.56.25.37:18080",
		"167.99.62.5:18080",
		"185.148.1.49:18088",
		"34.162.126.73:18080",
		"170.64.251.201:18080",
		"71.87.161.234:18080",
		"69.168.41.197:18080",
		"174.54.83.223:18080",
		"185.148.1.248:18080",
		"91.20.211.143:18080",
		"37.72.70.152:18080",
		"66.94.111.202:18080",
		"66.36.230.75:18080",
		"83.167.31.39:18080",
		"185.162.9.249:18080",
		"78.47.193.129:18080",
		"88.217.44.39:18080",
		"146.190.188.220:18080",
		"124.117.243.238:18080",
		"89.247.26.223:18080",
		"199.127.60.3:18080",
		"36.228.214.66:18080",
		"90.93.98.164:18080",
		"78.47.64.53:18080",
		"104.199.10.228:18080",
		"92.116.198.124:18080",
		"80.112.71.39:18080",
		"86.89.176.206:18080",
		"82.66.186.39:18080",
		"184.146.80.77:18080",
		"5.132.62.86:18080",
		"5.255.107.218:18080",
		"15.235.229.147:18080",
		"213.152.161.20:40425",
		"49.13.28.85:18080",
		"174.176.176.2:18080",
		"81.182.174.214:18080",
		"73.64.59.214:18080",
		"89.241.223.204:18080",
		"92.96.3.28:18080",
		"45.84.59.23:18080",
		"193.85.175.167:18080",
		"195.52.30.130:18080",
		"77.12.154.162:18080",
		"83.97.20.143:18080",
		"95.216.13.216:18080",
		"83.188.237.81:18080",
		"114.224.81.19:18080",
		"142.129.17.162:18080",
		"79.236.6.221:18080",
		"89.162.8.97:49152",
		"166.1.127.202:18080",
		"109.190.115.150:18080",
		"213.152.186.173:34138",
		"108.221.164.219:18080",
		"113.196.177.100:29671",
		"90.196.132.246:18080",
		"93.188.38.93:18080",
		"71.218.37.222:18080",
		"71.84.171.189:18080",
		"81.0.160.125:18080",
		"81.226.34.181:18080",
		"47.33.30.170:18080",
		"91.206.17.195:18080",
		"80.66.79.230:18080",
		"91.52.51.55:18080",
		"49.13.18.244:18080",
		"78.2.51.56:18080",
		"24.185.185.170:18080",
		"78.82.217.224:18080",
		"85.195.217.254:18080",
		"198.167.199.146:18080",
		"34.162.207.134:18080",
		"135.181.79.230:18080",
		"165.188.148.33:18080",
		"107.212.25.235:18080",
		"50.67.73.15:18080",
		"159.203.71.94:18080",
		"162.239.57.201:18089",
		"94.130.138.175:18080",
		"104.172.6.236:18080",
		"141.0.244.9:18080",
		"86.14.13.151:18080",
		"74.106.15.105:18080",
		"167.86.74.109:18080",
		"186.190.208.136:18080",
		"2.180.19.213:18080",
		"82.42.39.223:18080",
		"65.109.33.208:18080",
		"34.18.22.59:18080",
		"172.114.128.159:18080",
		"192.99.38.19:18080",
		"171.213.204.49:61808",
		"60.240.207.196:18080",
		"136.36.155.157:18080",
		"31.222.223.156:18080",
		"185.196.11.53:18080",
		"88.198.163.90:18080",
		"73.242.2.45:18080",
		"153.92.155.93:18080",
		"159.65.251.179:18080",
		"87.188.189.153:18080",
		"34.80.37.218:18080",
		"159.203.152.125:18080",
		"116.202.8.211:18080",
		"213.152.162.89:40425",
		"217.160.234.96:18080",
		"144.126.145.69:18080",
		"68.252.222.137:18080",
		"160.13.108.69:18080",
		"136.38.67.217:18080",
		"83.228.90.35:18080",
		"5.15.72.121:18080",
		"91.4.227.24:18080",
		"45.93.8.198:18080",
		"206.188.197.157:18080",
		"138.201.50.11:18080",
		"192.99.7.198:18080",
		"92.116.61.182:18080",
		"98.50.91.167:18080",
		"209.38.51.62:18080",
		"109.247.235.174:18080",
		"72.241.110.212:18080",
		"92.116.197.47:18080",
		"80.209.74.173:18080",
		"146.190.203.133:18080",
		"70.65.208.194:18080",
		"46.126.72.179:18080",
		"178.43.231.150:18080",
		"73.78.142.221:18080",
		"45.137.212.232:18080",
		"31.50.40.202:18080",
		"47.202.168.26:18080",
		"78.130.140.167:18080",
		"126.121.228.125:18080",
	}
	return nodelist, nil
}

func (d *DatabaseMock) GetChainHeight(coin string) (int32, string, error) {
	// return 3492044, []string{
	// 	"a812af41771e7d5b7b8813e6841370c0615fcab34227a6a04aaceb4b76eaaed0",
	// 	"f9addb88c4634bf4dfad123e574fbe0b6c346bc2395b3f3d7621d592974e6e91",
	// 	"51c1a2658786f201a5c780d0ece0c0db1059466eb4bbb5abea80f01a3e5828a5",
	// 	"6b17c5a74b7df9056d693f1673696de02e71404f69a67b7dbbbfc88b3bbf3537",
	// 	"e77d442a874abfaf83ba38023b8ea3d2b66e9161480d8a18b1e362fa2daa902a",
	// 	"6fdfb712dd04b7f73030aa632243e21c02a6ace726b67f0efe4310728705522c",
	// 	"77ac2ebc09f139c4d2ee8faee7b6db43ab227ef1f3892fcfe53df0764ebf4f3d",
	// 	"d899d0cbd15982b9714334eaac7cc42e3490ac4809c9ef23b71d939dc18a411a",
	// 	"860b40c3d2999e2f11437d3b393cb43cec690a8a50b49ba7d587df1c0cf1ab66",
	// 	"31108921b62f1e47486335c6061409c8816112836a0c132a49357a58c8aa92e9", //3492035
	// 	"71d89b03044fc20616c5a634e06bd2f7f53c1a3e5ab83ea11124439ea1748a52",
	// 	"62ac4b077c7923774dd8bf6caffac6fe62e4170b5bc3369ae92ee77f419b8bdb",
	// 	"9456fd87cb38c0a6e4721d68d2b1c8e2f1caa385fc0d19751fb94ff4cc53b5a7",
	// 	"49b4f44834aec0223ab7a4eb7aedf4f423f5dda0a4e647238dddf04ef4f5600c",
	// 	"85d1c4b2fe86e9f569defc01f8d49468cd2da1c490a05831bed7ba4e629bd95b", //3492004
	// 	"5434a8911bc55f3380b96e5e0846efce040af14f6f0e1288329ee93ad9ddd7df",
	// 	"787f1e6c10d5ca4d474418eb889fd8b2b6e10b191f3114d84e6ce93192873622",
	// 	"40d483fab412ea4896d10af5456def73e34c72d4e3d606de1bd7652102e3ec1e",
	// 	"c2fcb196c8c2caa6df6336f4162433c27e5b00d9eec770e9ac11aa421f9e341d",
	// 	"89f82ee5cd58f2e05af7552b61e81d402da93a2ff378b0d0cadf40fb1d438a89",
	// 	"f64a3f50990194b5a81f965ba757dfa6767be5665ff40c85f7352cb1209921d5",
	// 	"9135e021e01d7386a105b6a43d71334a5079cc606adfacaecff6b0b6f01b9704",
	// 	"995f1290420b2a85d1f76a9785139e1c309ea6b5d7079d335774dd04c648d241",
	// 	"16d17a10f553bc6608c8293f11496d65c22f201a011f68c2c3137d0cd21a23ca",
	// 	"8b815692a29086b40278b4c80fdd68a798e11e453dfd7a7fd56e9141bd911e2f",
	// 	"8208de15bfafe1191a9208143c565c055ecaf8319b9413f9adc85588ee75ec5b",
	// 	"9f1d8e7c0c23ed19794eea7728ba5e622c45a09f2877999de7c4c815242bfd71", //3360964
	// }, nil
	// return 0, "418015bb9ae982a1975da7d79277c2705727a56894ba0fb246adaabb1f4632e3", nil
	return 3492044, "a812af41771e7d5b7b8813e6841370c0615fcab34227a6a04aaceb4b76eaaed0", nil
}

func (d *DatabaseMock) ProcessBlock(chainName string, block interface{}) error {
	log.Printf("[*] Processed block %s: %v", chainName, block)
	return nil
}

func (p Nodelist) GetRandomNode() string {
	rng := rand.New(rand.NewSource(time.Now().UnixNano()))
	randomIndex := rng.Intn(len(p))
	return p[randomIndex]
}
